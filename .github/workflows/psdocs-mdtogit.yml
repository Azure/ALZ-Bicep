# Example: .github/workflows/arm-docs.yaml

name: Check Docs Generation
on:
  pull_request:
    types:
      - edited
      - opened
      - reopened
      - synchronize
    paths:
      - '**.bicep'

jobs:
  arm_docs:
    name: Check Docs Generation
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Bicep Build
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Path infra-as-code/bicep/ -Filter '*.bicep' -Exclude 'callModuleFromACR.example.bicep','orchHubSpoke.bicep' | ForEach-Object {
              Write-Information "==> Attempting Bicep Build For File: $_" -InformationAction Continue
              $output = bicep build $_.FullName 2>&1
              if ($LastExitCode -ne 0)
              {
                throw $output
              }
              Else
              {
                echo $output
              }
          }

      - name: Generate ARM markdowns
        run: |
          Install-Module -Name 'PSDocs.Azure' -Repository PSGallery -force;
          # Scan for Azure template file recursively in the infra-as-code/bicep/ directory
          Get-AzDocTemplateFile -Path infra-as-code/bicep/ | ForEach-Object {
            # Generate a standard name of the markdown file. i.e. <name>_<version>.md
            $template = Get-Item -Path $_.TemplateFile;
            $templateraw = Get-Content -Raw -Path $_.Templatefile;
            $templateName = $template.Directory.Parent.Name;
            $version = $template.Directory.Name;
            $docNameWithoutExtension = [System.IO.Path]::GetFileNameWithoutExtension($template.Name);
            $docName = "$($docNameWithoutExtension)_$version";
            $jobj = ConvertFrom-Json -InputObject $templateraw

            $outputpathformds = $template.DirectoryName+'/generateddocs'
            New-Item -Path $outputpathformds -ItemType Directory -Force

            # Conversion

            $templatepath = $template.DirectoryName
            $convertedtemplatename = $template.Name
            $convertedfullpath = $templatepath+"\"+$convertedtemplatename
            $jobj | ConvertTo-Json -Depth 100 | Set-Content -Path $convertedfullpath
            $mdname = ($docNameWithoutExtension)+'.bicep'

            # Generate markdown
            Invoke-PSDocument -Module PSDocs.Azure -OutputPath $outputpathformds -InputObject $template.FullName -InstanceName $mdname -Culture en-US;
          }
        shell: pwsh

      - name: Remove Generated JSONs
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Path infra-as-code/bicep/ -Filter '*.json' -Exclude 'bicepconfig.json','*.parameters.json','*.parameters.*.json','policy_*' | ForEach-Object {
              Write-Information "==> Removing generated JSON file $_ from Bicep Build" -InformationAction Continue
              Remove-Item -Path $_.FullName
          }

      - name: Check git status
        run: |
          echo "==> Check git status..."
          git status

      - name: Fail if markdown docs changed
        shell: pwsh
        run: |
          Write-Host "==> Verifying no markdown (*.md) changes were produced by doc generation..."
          $mdChanges = git status --porcelain | Where-Object { $_ -match '\.md$' }
          if ($mdChanges) {
            Write-Host '::warning::Markdown documentation changes detected. These should be generated and committed locally.'
            Write-Host "Changed markdown files:";
            $mdChanges | ForEach-Object { Write-Host $_ }
            Write-Host ''
            Write-Host 'To fix:'
            Write-Host '  1. Follow the manual generation steps in the contributing guide:'
            Write-Host '     https://github.com/Azure/ALZ-Bicep/wiki/Contributing#manually-generating-the-parameter-markdown-files'
            Write-Host '  2. Regenerate the parameter markdown files locally, as per instructions.'
            Write-Host '  3. Commit the updated .md files and push to this branch.'
            Write-Host ''
            Write-Host 'Failing the workflow to enforce up-to-date documentation.'
            exit 1
          }
          else {
            Write-Host 'No markdown documentation changes detected.'
          }

