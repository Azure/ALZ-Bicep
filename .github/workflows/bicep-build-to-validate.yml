name: Unit Tests - Bicep Files and Modules

on:
  pull_request:
    branches:
      - main
    paths:
      - "**.bicep"
      - "ps-rule.yaml"
      - ".ps-rule/*"
  workflow_dispatch: {}

jobs:
  bicep_unit_tests:
    name: Bicep Build & Lint All Modules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Bicep Build & Lint All Modules
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Filter '*.bicep' -Exclude 'callModuleFromACR.example.bicep','orchHubSpoke.bicep' | ForEach-Object {
              Write-Information "==> Attempting Bicep Build For File: $_" -InformationAction Continue
              $output = bicep build $_.FullName 2>&1
              if ($LastExitCode -ne 0)
              {
                throw $output
              }
              Else
              {
                echo $output
              }   
          }

      - name: List Azure Resource Types
        shell: pwsh
        run: |
          $resourceTypesFullList = @{}

          Get-ChildItem -Path '.\infra-as-code\bicep\modules' -Recurse -Filter '*.json' -Exclude 'callModuleFromACR.example.json', 'orchHubSpoke.json', '*parameters*.json', 'bicepconfig.json', '*policy_*.json' | ForEach-Object {
            Write-Information "==> Reading Built ARM Template JSON File: $_" -InformationAction Continue
            $armTemplate = Get-Content $_.FullName | ConvertFrom-Json -Depth 20
            $armResourceTypes = $armTemplate.Resources
            $armResourceTypes | ForEach-Object {
              if (!$resourceTypesFullList.ContainsKey($_.Type)) {
                $resourceTypesFullList.Add($_.Type, 1)
              }
              else {
                $resourceTypesFullList[$_.Type] += 1
              }
            }
          }

          Write-Information "==> Remove nested deployments resource type" -InformationAction Continue
          $resourceTypesFullList.Remove('Microsoft.Resources/Deployments') 

          Write-Information "***** List of resource types in ALZ-Bicep modules *****" -InformationAction Continue
          $resourceTypesFullList.Keys | Sort-Object

  azure_waf:
    name: Test Azure Well-Architected Framework
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Add pipeline tests for Azure Well-Architected Framework.
      # See https://aka.ms/ps-rule-action for configuration options.
      - name: Run PSRule analysis
        uses: Microsoft/ps-rule@v2.3.2
        with:
          modules: PSRule.Rules.Azure
          baseline: Azure.GA_2022_06
        continue-on-error: true
