name: Bicep Build Test

on:
  pull_request:
    branches:
      - main
    paths:
      - "**.bicep"
  workflow_dispatch: {}

jobs:
  bicep_unit_tests:
    name: Test Bicep Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Bicep Build to Test
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Filter '*.bicep' | ForEach-Object {
              Write-Information "==> Attempting Bicep Build For File: $_" -InformationAction Continue
              bicep build $_.FullName
          }

      - name: ARM-TTK Bicep Parameter Files
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: .*infra-as-code/bicep/modules/policy/definitions/lib/.*
          VALIDATE_ARM: true
          VALIDATE_JSON: true

  bicep_deploy:
    name: Deploy Bicep Files
    runs-on: ubuntu-latest
    env:
      ResourceGroupName: gitaction-bicep-rg
      ResourceGroupLocation: "eastus"
    environment: BicepUnitTests

    outputs:
      git_management_diff: ${{ steps.git_management_diff.outputs.test}}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.ALZ_AZURE_SECRET_UNIT_TESTS }}
          enable-AzPSSession: true
      
      - name: Check for managementGroup Changes
        id: git_management_diff
        run: |
          git diff HEAD^ HEAD infra-as-code/bicep/modules/managementGroups/managementGroups.bicep
          git diff HEAD^ HEAD infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          git diff HEAD^ HEAD infra-as-code/bicep/modules/policy/definitions/custom-policy-definitions.bicep
          git diff HEAD^ HEAD infra-as-code/bicep/modules/policy/assignments/policyAssignmentManagementGroup.bicep
          git diff HEAD^ HEAD infra-as-code/bicep/modules/subscriptionPlacement/subscriptionPlacement.bicep
          git diff HEAD^ HEAD infra-as-code/bicep/modules/roleAssignments/roleAssignmentManagementGroup.bicep
      
      - name: Check for logging Changes
        id: git_logging_diff
        run: |
            git diff --exit-code HEAD^ HEAD infra-as-code/bicep/modules/logging/logging.bicep
            echo "logging_changes = $?" >> $GITHUB_ENV
        continue-on-error: true

      - name: Check for hubNetworking Changes
        id: git_hubnetworking_diff
        run: |
          git diff HEAD^ HEAD infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep

      - name: Check for spokeNetworking Changes
        id: git_spokenetworking_diff
        run: |
          git diff HEAD^ HEAD infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep

      - name: Az CLI Create Resource Group
        if : ${{ env.logging_changes ==1 ||  steps.git_management_diff.outputs.diff == 'true' || steps.git_hubnetworking_diff.outputs.diff == 'true' || steps.git_spokenetworking_diff.outputs.diff == 'true'}}
        #if: steps.git_management_diff.outputs.diff || steps.git_logging_diff.outputs.diff || steps.git_hubnetworking_diff.outputs.diff || steps.git_spokenetworking_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            az group create --name ${{ env.ResourceGroupName }} --location ${{ env.ResourceGroupLocation }}
      
      - name: Az CLI Deploy ManagementGroups
        if: steps.git_management_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            az deployment tenant create --template-file infra-as-code/bicep/modules/managementGroups/managementGroups.bicep --parameters @infra-as-code/bicep/modules/managementGroups/managementGroups.parameters.example.json --location eastus

      - name: Az CLI Deploy Custom Role Definitions
        if: steps.git_management_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            az deployment mg create --template-file infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep  --parameters @infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.parameters.example.json --location eastus --management-group-id alz

      - name: Az CLI Deploy Custom Policy Definitions
        if: steps.git_management_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            az deployment mg create --template-file infra-as-code/bicep/modules/policy/definitions/custom-policy-definitions.bicep  --parameters @infra-as-code/bicep/modules/policy/definitions/custom-policy-definitions.parameters.example.json --location eastus --management-group-id alz

      - name: Az CLI Deploy Logging
        if: env.logging_changes ==1
        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            az deployment group create --resource-group ${{ env.ResourceGroupName }} --template-file infra-as-code/bicep/modules/logging/logging.bicep --parameters @infra-as-code/bicep/modules/logging/logging.parameters.example.json

      - name: Az CLI Policy Assignment DINE
        if: steps.git_management_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            az deployment mg create --template-file infra-as-code/bicep/modules/policy/assignments/policyAssignmentManagementGroup.bicep --parameters @infra-as-code/bicep/modules/policy/assignments/policyAssignmentManagementGroup.parameters.example-dine.json --location eastus --management-group-id 'alz-landingzones'

      - name: Az CLI built-in Reader RBAC Role Service Principal
        if: steps.git_management_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            az deployment mg create --template-file infra-as-code/bicep/modules/roleAssignments/roleAssignmentManagementGroup.bicep --parameters @infra-as-code/bicep/modules/roleAssignments/roleAssignmentManagementGroup.parameters.service-principal.example.json --location eastus --management-group-id 'alz-platform'
      
      - name: Az CLI Subscription Placement
        if: steps.git_management_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            az deployment mg create --template-file infra-as-code/bicep/modules/subscriptionPlacement/subscriptionPlacement.bicep --parameters @infra-as-code/bicep/modules/subscriptionPlacement/subscriptionPlacement.parameters.example.json --location eastus --management-group-id 'alz'

      - name: Az CLI Deploy Hub Networking
        if: steps.git_hubnetworking_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            az deployment group create --resource-group ${{ env.ResourceGroupName }} --template-file infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep

      - name: Az CLI Deploy Spoke Networking
        if: steps.git_spokenetworking_diff.outputs.diff
        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            az deployment group create --resource-group ${{ env.ResourceGroupName }} --template-file infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep

  bicep_cleanup:
    name: Cleanup Bicep Deployment
    runs-on: ubuntu-latest
    env:
      ResourceGroupName: gitaction-bicep-rg
      ResourceGroupLocation: "eastus"
    environment: BicepUnitTests
    if: always()
    needs: [bicep_deploy]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Azure Login
        uses: azure/login@v1
        with:
            creds: ${{ secrets.ALZ_AZURE_SECRET_UNIT_TESTS }}
            enable-AzPSSession: true

      - name: Az CLI Remove/Cleanup Deployment
        if: needs.bicep_deploy.outputs.git_management_diff
        shell: pwsh
        run: |
            install-module -Name "Az.Accounts" -MinimumVersion "2.5.2" -Force
            install-module -Name "Az.Resources" -MinimumVersion "4.3.0" -Force
            install-module -Name "Az.ResourceGraph" -MinimumVersion "0.7.7"-Force
            .github/scripts/Wipe-ESLZAzTenant.ps1 -tenantRootGroupID "8d29a0a4-f756-4c2b-806f-81d1f40c9022" -intermediateRootGroupID "alz"
      
      - name: Az Remove Resource Group
        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            if [ $(az group exists --name ${{ env.ResourceGroupName }} ) = true ]; then
              az group delete --name ${{ env.ResourceGroupName }} --yes
            fi