name: Bicep Build Test

on:
  pull_request:
    branches:
      - main
    paths:
      - "**.bicep"
  workflow_dispatch: {}

jobs:
  bicep_unit_tests:
    name: Test Bicep Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Bicep Build to Test
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Filter '*.bicep' | ForEach-Object {
              Write-Information "==> Attempting Bicep Build For File: $_" -InformationAction Continue
              bicep build $_.FullName
          }

      - name: ARM-TTK Bicep Parameter Files
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: .*infra-as-code/bicep/modules/policy/definitions/lib/.*
          VALIDATE_ARM: true
          VALIDATE_JSON: true

  bicep_deploy:
    name: Deploy Bicep Files
    runs-on: ubuntu-latest
    env:
      #prNumber: ${{ github.event.number }}
      ResourceGroupName: "rsg-github-pr-${{ github.event.number }}"
      ManagementGroupPrefix: "PR-${{ github.event.number }}"
      TopLevelManagementGroupDisplayName: "PR ${{ github.event.number }} Azure Landing Zones"
      SubscriptionName: "sub-unit-test-pr-${{ github.event.number }}"
      Location: "eastus"

    environment: BicepUnitTests

    outputs:
      git_management_diff: ${{ steps.git_management_diff.outputs.test}}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.ALZ_AZURE_SECRET_UNIT_TESTS }}
          enable-AzPSSession: true
      
      - name: Check for managementGroup Changes
        id: git_management_diff
        run: |
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/managementGroups/managementGroups.bicep
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/policy/definitions/custom-policy-definitions.bicep
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/policy/assignments/policyAssignmentManagementGroup.bicep
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/subscriptionPlacement/subscriptionPlacement.bicep
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/roleAssignments/roleAssignmentManagementGroup.bicep
      
      - name: Check for logging Changes
        id: git_logging_diff
        run: |
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/logging/logging.bicep

      - name: Check for hubNetworking Changes
        id: git_hubnetworking_diff
        run: |
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep

      - name: Check for spokeNetworking Changes
        id: git_spokenetworking_diff
        run: |
          git diff --name-only HEAD^ HEAD infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep

      #jobs:
      #  test-job:
      #    runs-on: ubuntu-latest
      #    steps:
      #      - name: Checkout this repo
      #        uses: actions/checkout@v2
      #        with:
      #          fetch-depth: 2      #

      #      - name: Test1
      #        id: test1
      #        run: |
      #          h=$(az --version)     #

      #          echo "::set-output name=h::$h"      #

      #      - name: Test2
      #        run: |
      #          echo "${{ steps.test1.outputs.h }}"     #
      #

      - name: Az CLI Create Subscription
        uses: Azure/CLI@v1
        id: create_subscription
        with:
          inlineScript: |
            #!/bin/bash
            if [[ ${{ steps.git_logging_diff.outputs.diff != ''  }} || ${{ steps.git_management_diff.outputs.diff != ''  }} || ${{ steps.git_hubnetworking_diff.diff != ''  }} || ${{ steps.git_spokenetworking_diff.diff != ''  }} ]] ; then
              subid=$(az deployment tenant create --name "deploy-${{ env.SubscriptionName }}" --location ${{ env.Location }} --template-file infra-as-code/bicep/CRML/subscriptionAlias/subscriptionAlias.bicep --parameters @infra-as-code/bicep/CRML/subscriptionAlias/subscriptionAlias.parameters.example.json --parameters parSubscriptionBillingScope=${{ secrets.ALZ_AZURE_SECRET_EA_BILLING_ACCOUNT }} parSubscriptionName=${{ env.SubscriptionName }})
              echo "::set-output name=subid::$subid.outSubscriptionId.value"
            fi
            exit 0

      - name: Az CLI Create Resource Group
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash
            if [[ ${{ steps.git_logging_diff.outputs.diff != ''  }} || ${{ steps.git_management_diff.outputs.diff != ''  }} || ${{ steps.git_hubnetworking_diff.diff != ''  }} || ${{ steps.git_spokenetworking_diff.diff != ''  }} ]] ; then
              echo "${{ steps.create_subscription.outputs.subid }}"
              az account set --subscription ${{ steps.create_subscription.outputs.subid }}
              az group create --name ${{ env.ResourceGroupName }} --location ${{ env.Location }}
            fi
            exit 0

      - name: Az CLI Deploy ManagementGroups
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            #!/bin/bash
            if [[ ${{ steps.git_management_diff.outputs.diff != ''  }} ]] ; then
              az deployment tenant create --template-file infra-as-code/bicep/modules/managementGroups/managementGroups.bicep --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} parTopLevelManagementGroupDisplayName=${{ env.TopLevelManagementGroupDisplayName }} --location ${{ env.Location }}
            fi
            exit 0

      - name: Az CLI Deploy Custom Role Definitions
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            #!/bin/bash
            if [[ ${{ steps.git_management_diff.outputs.diff != ''  }} ]] ; then
              az deployment mg create --template-file infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep  --parameters @infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.parameters.example.json --location ${{ env.Location }} --management-group-id ${{ env.ManagementGroupPrefix }}
            fi
            exit 0

      - name: Az CLI Deploy Custom Policy Definitions
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            #!/bin/bash
            if [[ ${{ steps.git_management_diff.outputs.diff != ''  }} ]] ; then
              az deployment mg create --template-file infra-as-code/bicep/modules/policy/definitions/custom-policy-definitions.bicep  --parameters @infra-as-code/bicep/modules/policy/definitions/custom-policy-definitions.parameters.example.json --location ${{ env.Location }} --management-group-id ${{ env.ManagementGroupPrefix }}
            fi
            exit 0

      - name: Az CLI Deploy Logging
        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            if [[ ${{ steps.git_logging_diff.outputs.diff != ''  }} ]] ; then
              az deployment group create --resource-group ${{ env.ResourceGroupName }} --template-file infra-as-code/bicep/modules/logging/logging.bicep --parameters @infra-as-code/bicep/modules/logging/logging.parameters.example.json
            fi
            exit 0

      - name: Az CLI Policy Assignment DINE
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            #!/bin/bash
            if [[ ${{ steps.git_management_diff.outputs.diff != ''  }} ]] ; then
              az deployment mg create --template-file infra-as-code/bicep/modules/policy/assignments/policyAssignmentManagementGroup.bicep --parameters @infra-as-code/bicep/modules/policy/assignments/policyAssignmentManagementGroup.parameters.example-dine.json --location ${{ env.Location }} --management-group-id "${{ env.ManagementGroupPrefix }}-landingzones"
              az deployment mg create --template-file infra-as-code/bicep/modules/roleAssignments/roleAssignmentManagementGroup.bicep --parameters @infra-as-code/bicep/modules/roleAssignments/roleAssignmentManagementGroup.parameters.service-principal.example.json --location ${{ env.Location }} --management-group-id "${{ env.ManagementGroupPrefix }}-platform"
            fi
            exit 0
       # with: 
       #   inlineScript: |  
       #     #!/bin/bash
       #     if [[ ${{ steps.git_management_diff.outputs.diff != ''  }} ]] ; then
       #       az deployment mg create --template-file infra-as-code/bicep/modules/roleAssignments/roleAssignmentManagementGroup.bicep --parameters @infra-as-code/bicep/modules/roleAssignments/roleAssignmentManagementGroup.parameters.service-principal.example.json --location ${{ env.Location }} --management-group-id "${{ env.ManagementGroupPrefix }}-platform"
       #     fi
       #     exit 0
#
      - name: Az CLI Subscription Placement
        uses: Azure/CLI@v1
        with: 
          inlineScript: |   
            #!/bin/bash
            if [[ ${{ steps.git_management_diff.outputs.diff != ''  }} ]] ; then
              az deployment mg create --template-file infra-as-code/bicep/modules/subscriptionPlacement/subscriptionPlacement.bicep --parameters @infra-as-code/bicep/modules/subscriptionPlacement/subscriptionPlacement.parameters.example.json --location ${{ env.Location }} --management-group-id ${{ env.ManagementGroupPrefix }}
            fi
            exit 0

      - name: Az CLI Deploy Hub Networking

        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            if [[ ${{ steps.git_hubnetworking_diff.outputs.diff != ''  }} ]] ; then
              az deployment group create --resource-group ${{ env.ResourceGroupName }} --template-file infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
            fi
            exit 0

      - name: Az CLI Deploy Spoke Networking
        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            if [[ ${{ steps.git_spokenetworking_diff.outputs.diff != ''  }} ]] ; then
              az deployment group create --resource-group ${{ env.ResourceGroupName }} --template-file infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep
            fi
            exit 0

  bicep_cleanup:
    name: Cleanup Bicep Deployment
    runs-on: ubuntu-latest
    env:
      ResourceGroupName: gitaction-bicep-rg
      Location: "eastus"
    environment: BicepUnitTests
    if: always()
    needs: [bicep_deploy]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Azure Login
        uses: azure/login@v1
        with:
            creds: ${{ secrets.ALZ_AZURE_SECRET_UNIT_TESTS }}
            enable-AzPSSession: true

      - name: Az CLI Remove/Cleanup Deployment
        if: needs.bicep_deploy.outputs.git_management_diff
        shell: pwsh
        run: |
            install-module -Name "Az.Accounts" -MinimumVersion "2.5.2" -Force
            install-module -Name "Az.Resources" -MinimumVersion "4.3.0" -Force
            install-module -Name "Az.ResourceGraph" -MinimumVersion "0.7.7"-Force
            .github/scripts/Wipe-ESLZAzTenant.ps1 -tenantRootGroupID "8d29a0a4-f756-4c2b-806f-81d1f40c9022" -intermediateRootGroupID ${{ env.ManagementGroupPrefix }}
      
      - name: Az Remove Resource Group
        uses: Azure/CLI@v1
        with: 
          inlineScript: |
            #!/bin/bash
            if [ $(az group exists --name ${{ env.ResourceGroupName }} ) == true ]; then
              az group delete --name ${{ env.ResourceGroupName }} --yes
            fi